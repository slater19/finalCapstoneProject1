{"ast":null,"code":"var _class;\nimport { adminLogin } from './adminlogin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AdminLoginComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Email-id required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminLoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminLoginComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password required \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class AdminLoginComponent {\n  constructor(router) {\n    this.router = router;\n    this.adlogin = new adminLogin();\n  }\n  ngOnInit() {}\n  Gotopage(userForm) {\n    if (this.adlogin.emailId == \"admin@gmail.com\" && this.adlogin.password == \"kitchenadmin\") {\n      if (window.confirm(\"Do you want to visit Admin Page?\")) {\n        this.router.navigate(['/admin-page']);\n      } else {\n        userForm.reset();\n        console.log(this.adlogin.password);\n      }\n    } else {\n      userForm.reset();\n      alert(\"Invalid EmailId or Password\");\n    }\n  }\n  save(userForm) {}\n}\n_class = AdminLoginComponent;\n_class.ɵfac = function AdminLoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-admin-login\"]],\n  decls: 24,\n  vars: 12,\n  consts: [[\"novalidate\", \"\", 1, \"container\", \"col-md-6\", \"mt-5\", 3, \"ngSubmit\"], [\"regForm\", \"ngForm\"], [1, \"display-4\", \"lead\", 2, \"font-family\", \"Hey October\"], [1, \"form-group\"], [\"for\", \"emailId\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"emailId\", \"id\", \"emailId\", \"type\", \"text\", \"minlength\", \"4\", \"required\", \"\", \"pattern\", \"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"EmailIdVar\", \"ngModel\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"required\", \"\", \"minlength\", \"5\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"passwordVar\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function AdminLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelement(0, \"br\");\n      i0.ɵɵelementStart(1, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AdminLoginComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.save(_r0));\n      });\n      i0.ɵɵelementStart(3, \"p\", 2);\n      i0.ɵɵtext(4, \"Admin Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Enter Email-id: \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.adlogin.emailId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"span\", 7);\n      i0.ɵɵtemplate(11, AdminLoginComponent_span_11_Template, 2, 0, \"span\", 8);\n      i0.ɵɵtemplate(12, AdminLoginComponent_span_12_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3);\n      i0.ɵɵelement(14, \"Br\");\n      i0.ɵɵelementStart(15, \"label\", 9);\n      i0.ɵɵtext(16, \"Enter Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AdminLoginComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.adlogin.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"span\", 7);\n      i0.ɵɵtemplate(20, AdminLoginComponent_span_20_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(21, \"Br\");\n      i0.ɵɵelementStart(22, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function AdminLoginComponent_Template_button_click_22_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.Gotopage(_r0));\n      });\n      i0.ɵɵtext(23, \"Login\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      const _r1 = i0.ɵɵreference(9);\n      const _r4 = i0.ɵɵreference(18);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.adlogin.emailId)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (_r1.touched || _r1.dirty) && !_r1.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.adlogin.password)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (_r4.touched || _r4.dirty) && !_r4.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r4.errors);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.PatternValidator, i3.NgModel, i3.NgForm],\n  styles: [\"p[_ngcontent-%COMP%]\\n{\\n    margin-top: 0.2%;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vYWRtaW4tbG9naW4vYWRtaW4tbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxnQkFBZ0I7QUFDcEIiLCJzb3VyY2VzQ29udGVudCI6WyJwXG57XG4gICAgbWFyZ2luLXRvcDogMC4yJTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["adminLogin","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AdminLoginComponent","constructor","router","adlogin","ngOnInit","Gotopage","userForm","emailId","password","window","confirm","navigate","reset","console","log","alert","save","ɵɵdirectiveInject","i1","Router","selectors","decls","vars","consts","template","AdminLoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","AdminLoginComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r6","_r0","ɵɵreference","ɵɵresetView","AdminLoginComponent_Template_input_ngModelChange_8_listener","$event","ɵɵtemplate","AdminLoginComponent_span_11_Template","AdminLoginComponent_span_12_Template","AdminLoginComponent_Template_input_ngModelChange_17_listener","AdminLoginComponent_span_20_Template","AdminLoginComponent_Template_button_click_22_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","_r1","touched","dirty","valid","errors","_r4"],"sources":["C:\\Users\\Sachin\\Downloads\\foodbox-master\\foodbox-master\\src\\app\\admin\\admin-login\\admin-login.component.ts","C:\\Users\\Sachin\\Downloads\\foodbox-master\\foodbox-master\\src\\app\\admin\\admin-login\\admin-login.component.html"],"sourcesContent":["import { Component, getModuleFactory, OnInit} from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { SearchService } from 'src/app/search.service';\nimport { adminLogin } from './adminlogin';\nimport { RouterModule, Route, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n  \n  \n  adlogin = new adminLogin();\n\n  constructor(private router: Router){\n  }\n\n  ngOnInit(): void {\n  }\n  Gotopage(userForm : NgForm)\n  {\n    if(this.adlogin.emailId == \"admin@gmail.com\" && this.adlogin.password == \"kitchenadmin\"){\n      if(window.confirm(\"Do you want to visit Admin Page?\")){\n        this.router.navigate(['/admin-page']);\n      }\n      else{\n        userForm.reset();\n        console.log(this.adlogin.password);\n      }\n      \n    }\n    else{\n      userForm.reset();\n      alert(\"Invalid EmailId or Password\");\n\n\n    }\n  }\n  save(userForm : NgForm){\n    \n    \n  }\n\n}","<br>\n<form class=\"container col-md-6 mt-5\" novalidate (ngSubmit) = \"save(regForm)\" #regForm = \"ngForm\">\n    <p class = \"display-4 lead\" style=\"font-family: Hey October;\">Admin Login</p>            \n      <div class=\"form-group\"> \n        <label for=\"emailId\" class=\"lead\" style=\"font-family: Hey October;\">Enter Email-id: &nbsp;</label> \n        <input [(ngModel)] = adlogin.emailId #EmailIdVar = \"ngModel\" name=\"emailId\"  id = \"emailId\" type=\"text\" minlength=\"4\" class=\"form-control\" required\n        [ngClass] = \"{'is-invalid' : (EmailIdVar.touched || EmailIdVar.dirty) && !EmailIdVar.valid}\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\"/>\n        <span class=\"invalid-feedback\">\n            <span *ngIf = EmailIdVar.errors>\n                Email-id required\n            </span> \n            \n            <span *ngIf = EmailIdVar.errors>\n                Enter a valid email\n            </span>\n        </span>\n    </div>    \n      <div class=\"form-group\"> \n        <Br>\n        <label for=\"password\" class=\"lead\" style=\"font-family: Hey October;\">Enter Password: </label>\n        <input [(ngModel)] = adlogin.password #passwordVar = \"ngModel\" name=\"password\"  id = \"password\" type=\"password\"  class=\"form-control\" required minlength=\"5\" \n        [ngClass] = \"{'is-invalid' : (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid}\"/>\n        <span class=\"invalid-feedback\">\n            <span *ngIf = passwordVar.errors>\n                Password required\n            </span>\n            \n        </span>\n    </div>\n    <Br>\n      <button type=\"submit\" class=\"btn btn-success\"  [disabled] = '!regForm.valid' (click) = \"Gotopage(regForm)\" >Login</button>            \n  </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}