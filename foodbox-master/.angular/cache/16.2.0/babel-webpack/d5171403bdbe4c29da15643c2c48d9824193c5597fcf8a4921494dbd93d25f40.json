{"ast":null,"code":"var _class;\nimport { UserLogin } from './userlogin';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../search.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction UserLoginComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Email-id required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Enter a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UserLoginComponent_span_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class UserLoginComponent {\n  constructor(router, proservice) {\n    this.router = router;\n    this.proservice = proservice;\n    this.userlog = new UserLogin();\n  }\n  Gotopage(userForm) {\n    if (this.userlog.emailId == this.proservice.mail && this.userlog.password == this.proservice.getpwd()) {\n      if (window.confirm(\"Let's start Shopping..\")) {\n        this.router.navigate(['/product']);\n      } else {\n        userForm.reset();\n        console.log(this.proservice.mail);\n        console.log(this.proservice.getpwd());\n      }\n    } else {\n      userForm.reset();\n      alert(\"Invalid EmailId or Password\");\n    }\n  }\n  save(userForm) {}\n}\n_class = UserLoginComponent;\n_class.ɵfac = function UserLoginComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.SearchService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-user-login\"]],\n  decls: 29,\n  vars: 12,\n  consts: [[\"id\", \"page\"], [\"novalidate\", \"\", 1, \"container\", \"col-md-6\", \"mt-5\", 3, \"ngSubmit\"], [\"regForm\", \"ngForm\"], [1, \"display-4\", \"lead\", 2, \"font-family\", \"Hey October\"], [1, \"form-group\"], [\"for\", \"emailId\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"emailId\", \"id\", \"emailId\", \"type\", \"text\", \"required\", \"\", \"pattern\", \"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"EmailIdVar\", \"ngModel\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"lead\", 2, \"font-family\", \"Hey October\"], [\"name\", \"password\", \"id\", \"password\", \"type\", \"password\", \"minlength\", \"8\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"passwordVar\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n  template: function UserLoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r6 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"br\")(2, \"br\")(3, \"br\");\n      i0.ɵɵelementStart(4, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function UserLoginComponent_Template_form_ngSubmit_4_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.save(_r0));\n      });\n      i0.ɵɵelementStart(6, \"p\", 3);\n      i0.ɵɵtext(7, \"User Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Enter Email-id : \\u00A0\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function UserLoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.userlog.emailId = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"span\", 8);\n      i0.ɵɵtemplate(14, UserLoginComponent_span_14_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵtemplate(17, UserLoginComponent_span_17_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(18, \"div\", 4)(19, \"label\", 10);\n      i0.ɵɵtext(20, \"Enter Password : \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function UserLoginComponent_Template_input_ngModelChange_21_listener($event) {\n        return ctx.userlog.password = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"span\", 8);\n      i0.ɵɵtemplate(24, UserLoginComponent_span_24_Template, 2, 0, \"span\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"br\")(26, \"br\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function UserLoginComponent_Template_button_click_27_listener() {\n        i0.ɵɵrestoreView(_r6);\n        const _r0 = i0.ɵɵreference(5);\n        return i0.ɵɵresetView(ctx.Gotopage(_r0));\n      });\n      i0.ɵɵtext(28, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(5);\n      const _r1 = i0.ɵɵreference(12);\n      const _r4 = i0.ɵɵreference(22);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngModel\", ctx.userlog.emailId)(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, (_r1.touched || _r1.dirty) && !_r1.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r1.errors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.userlog.password)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (_r4.touched || _r4.dirty) && !_r4.valid));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r4.errors);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !_r0.valid);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.MinLengthValidator, i4.PatternValidator, i4.NgModel, i4.NgForm],\n  styles: [\"#page[_ngcontent-%COMP%]\\n{\\n    margin-top: 0.5%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdXNlci1sb2dpbi91c2VyLWxvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksZ0JBQWdCO0FBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiI3BhZ2VcbntcbiAgICBtYXJnaW4tdG9wOiAwLjUlO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["UserLogin","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","UserLoginComponent","constructor","router","proservice","userlog","Gotopage","userForm","emailId","mail","password","getpwd","window","confirm","navigate","reset","console","log","alert","save","ɵɵdirectiveInject","i1","Router","i2","SearchService","selectors","decls","vars","consts","template","UserLoginComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","UserLoginComponent_Template_form_ngSubmit_4_listener","ɵɵrestoreView","_r6","_r0","ɵɵreference","ɵɵresetView","UserLoginComponent_Template_input_ngModelChange_11_listener","$event","ɵɵtemplate","UserLoginComponent_span_14_Template","UserLoginComponent_span_17_Template","UserLoginComponent_Template_input_ngModelChange_21_listener","UserLoginComponent_span_24_Template","UserLoginComponent_Template_button_click_27_listener","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c0","_r1","touched","dirty","valid","errors","_r4"],"sources":["C:\\Users\\Sachin\\Downloads\\foodbox-master\\foodbox-master\\src\\app\\user-login\\user-login.component.ts","C:\\Users\\Sachin\\Downloads\\foodbox-master\\foodbox-master\\src\\app\\user-login\\user-login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SearchService } from '../search.service';\nimport { UserLogin } from './userlogin';\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.css']\n})\nexport class UserLoginComponent {\n\n  constructor(private router: Router,private proservice:SearchService){\n  }\n\n  userlog = new UserLogin();\n  \n  Gotopage(userForm : NgForm)\n  {\n    if(this.userlog.emailId == this.proservice.mail && this.userlog.password == this.proservice.getpwd()){\n      if(window.confirm(\"Let's start Shopping..\")){\n        this.router.navigate(['/product']);\n      }\n      else{\n        userForm.reset();\n        console.log(this.proservice.mail);\n        console.log(this.proservice.getpwd());\n      }\n      \n    }\n    else{\n      userForm.reset();\n      alert(\"Invalid EmailId or Password\");\n\n    }\n  }\n  save(userForm : NgForm){\n  }\n}","<div id=\"page\">\n    <br><br><br>\n<form class=\"container col-md-6 mt-5\" novalidate (ngSubmit) = \"save(regForm)\" #regForm = \"ngForm\">\n    <p class = \"display-4 lead\" style=\"font-family: Hey October;\">User Login</p>            \n      <div class=\"form-group\"> \n        <label for=\"emailId\" class=\"lead\" style=\"font-family: Hey October;\">Enter Email-id :   &nbsp;</label>\n        <input [(ngModel)] = userlog.emailId #EmailIdVar = \"ngModel\" name=\"emailId\"  id = \"emailId\" type=\"text\"  class=\"form-control\" required\n        [ngClass] = \"{'is-invalid' : (EmailIdVar.touched || EmailIdVar.dirty) && !EmailIdVar.valid}\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$\"/>\n        <span class=\"invalid-feedback\">\n            <span *ngIf = EmailIdVar.errors>\n                Email-id required. \n            </span>\n            <br><br>\n            <span *ngIf = EmailIdVar.errors>\n                Enter a valid email.\n            </span>\n        </span>\n    </div>    \n      <div class=\"form-group\"> \n        <label for=\"password\" class=\"lead\" style=\"font-family: Hey October;\">Enter Password : </label>\n        <input [(ngModel)] = userlog.password #passwordVar = \"ngModel\" name=\"password\"  id=\"password\" type=\"password\" minlength=\"8\" class=\"form-control\" required\n        [ngClass] = \"{'is-invalid' : (passwordVar.touched || passwordVar.dirty) && !passwordVar.valid}\" />\n        <span class=\"invalid-feedback\">\n            <span *ngIf = passwordVar.errors>\n            Password required. \n            </span>                \n        </span>\n        <br><br>\n    </div>\n      <button type=\"submit\" class=\"btn btn-success\"  [disabled] = '!regForm.valid' (click) = \"Gotopage(regForm)\" >Login</button>            \n  </form>\n\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}